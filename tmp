package agh.cs;

public class Vector2d {
    public final int x, y;

    public Vector2d(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public String toString() {
        return "(" + this.x + "," + this.y + ")";
    }

    public boolean precedes(Vector2d other) {
        if (other.x >= this.x && other.y >= this.y) return true;
        return false;
    }

    public boolean follows(Vector2d other) {
        if (other.x <= this.x && other.y <= this.y) return true;
        return false;
    }

    public Vector2d upperRight(Vector2d other) {
        return new Vector2d(max(other.x, this.x), max(other.y, this.y));
    }

    public Vector2d lowerLeft(Vector2d other) {
        return new Vector2d(min(other.x, this.x), min(other.y, this.y));
    }

    public Vector2d add(Vector2d other) {
        return new Vector2d(other.x + this.x, other.y + this.y);
    }

    public Vector2d subtract(Vector2d other) {
        return new Vector2d(other.x - this.x, other.y - this.y);
    }


    public boolean equal(Object other) {
        if(other == this)
            return true;
        if (!(other instanceof Vector2d))
            return false;
        return other.equals(this);
    }

    public Vector2d opposite() {
        return new Vector2d(-this.x, -this.y);
    }


    private int max(int x, int y) {
        if (x > y) return x;
        return y;
    }

    private int min(int x, int y) {
        if (x < y) return x;
        return y;
    }
}
